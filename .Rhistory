+ theme_bw() 										#空白主题
+ labs(title = "Constantly up DE genes Enriched Biological Process")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
g2 = (ggplot(data)
+	geom_bar(aes(x=reorder(Term,PValue),weight=PValue),  #将term按pvalue排序；bar的高度为term*weight
fill="darkolivegreen3",  							#bar填充的颜色
position = position_stack(reverse = F),	    		#未知
width = 0.4,										#bar的宽度
show.legend = F)									#不显示legend
+ coord_flip() 										#倒置坐标轴
+ xlab("") + ylab("-lg(pvalue)") 					#x,y坐标轴标题
+ theme_bw() 										#空白主题
+ labs(title = "Constantly downregulated genes Enriched KEGG Pathway")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
ggsave("KEGG_down1.pdf",g2,width = 9.60,height = 4.80)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(reshape2)
g2 = (ggplot(data)
+	geom_bar(aes(x=reorder(Term,PValue),weight=PValue),  #将term按pvalue排序；bar的高度为term*weight
fill="darkgreen3",  							#bar填充的颜色
position = position_stack(reverse = F),	    		#未知
width = 0.4,										#bar的宽度
show.legend = F)									#不显示legend
+ coord_flip() 										#倒置坐标轴
+ xlab("") + ylab("-lg(pvalue)") 					#x,y坐标轴标题
+ theme_bw() 										#空白主题
+ labs(title = "Constantly Downregulated Genes Enriched KEGG Pathway")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
g2 = (ggplot(data)
+	geom_bar(aes(x=reorder(Term,PValue),weight=PValue),  #将term按pvalue排序；bar的高度为term*weight
fill="darkgreen",  							#bar填充的颜色
position = position_stack(reverse = F),	    		#未知
width = 0.4,										#bar的宽度
show.legend = F)									#不显示legend
+ coord_flip() 										#倒置坐标轴
+ xlab("") + ylab("-lg(pvalue)") 					#x,y坐标轴标题
+ theme_bw() 										#空白主题
+ labs(title = "Constantly Downregulated Genes Enriched KEGG Pathway")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
g2 = (ggplot(data)
+	geom_bar(aes(x=reorder(Term,PValue),weight=PValue),  #将term按pvalue排序；bar的高度为term*weight
fill="OliveDrab3",  							#bar填充的颜色
position = position_stack(reverse = F),	    		#未知
width = 0.4,										#bar的宽度
show.legend = F)									#不显示legend
+ coord_flip() 										#倒置坐标轴
+ xlab("") + ylab("-lg(pvalue)") 					#x,y坐标轴标题
+ theme_bw() 										#空白主题
+ labs(title = "Constantly Downregulated Genes Enriched KEGG Pathway")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
raw <- read.table("constantly_up_DOWN.txt",sep = "\t",header = T)
data <- raw[1:8,c("Term","PValue")]
data$PValue <- -log10(data$PValue)
rownames(data) <- data$Term
# test <- melt(data)
g = ggplot(data)
g2 = (g+ geom_bar(aes(x=reorder(Term,PValue),weight=PValue),fill="darkolivegreen3",position = position_stack(reverse = F),width = 0.4,show.legend = F)
+ coord_flip() + xlab("") + ylab("-lg(pvalue)") + theme_bw() + labs(title = "Constantly Upregulated genes Enriched Biological Process")+
theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
#plot.title = element_text(hjust = 4),
axis.text.y = element_text(colour = "black",size = 10),
plot.margin = margin(10,10,5,5)
)
+ scale_y_continuous(limits = c(0,10),expand=c(0,0))
#+ guides(fill = F)
)
print(g2)
ggsave("BP_up1.pdf",g2,width = 9.60,height = 4.80)
raw <- read.table("../chart_KEGG_down.txt",sep = "\t",header = T)
data <- raw[1:9,c("Term","PValue")]
data$PValue <- -log10(data$PValue)
rownames(data) <- data$Term
g2 = (ggplot(data)
+	geom_bar(aes(x=reorder(Term,PValue),weight=PValue),  #将term按pvalue排序；bar的高度为term*weight
fill="OliveDrab3",  							#bar填充的颜色
position = position_stack(reverse = F),	    		#未知
width = 0.4,										#bar的宽度
show.legend = F)									#不显示legend
+ coord_flip() 										#倒置坐标轴
+ xlab("") + ylab("-lg(pvalue)") 					#x,y坐标轴标题
+ theme_bw() 										#空白主题
+ labs(title = "Constantly Downregulated Genes Enriched KEGG Pathway")   #图标题
+ theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),						#空白背景
#plot.title = element_text(hjust = 4),					#调整标题位置
axis.text.y = element_text(colour = "black",size = 10),	#y轴文字颜色大小
plot.margin = margin(10,10,5,5)							#图与边界的空白
)
+ scale_y_continuous(limits = c(0,13),expand=c(0,0))				#y轴范围；与x轴的留白为0
#+ guides(fill = F)
)
print(g2)
ggsave("KEGG_down1.pdf",g2,width = 9.60,height = 4.80)
View(data)
diamonds$carat
setwd("~/R/epider")
setwd("~/R/epider")
load()
load(".RData")
temp <- read.table("go_term/constantly_up_DOWN.txt",header = F,sep = "\t",row.names = NULL)
View(temp)
select1 <- strsplit(as.vector(temp[2,6]),split=", ")[[1]]
select2 <- strsplit(as.vector(temp[3,6]),split=", ")[[1]]
select3 <- strsplit(as.vector(temp[6,6]),split=", ")[[1]]
select1
select2
select3
select <- select1 + select2 + select3
select <- c(select1,select2,seleact3)
select <- c(select1,select2,select3)
select
select <- select[!duplicated(select)]
select
temp <- read.table("go_term/constantly_up_DOWN.txt",header = F,sep = "\t",row.names = NULL)
select1 <- strsplit(as.vector(temp[2,6]),split=", ")[[1]]
select2 <- strsplit(as.vector(temp[3,6]),split=", ")[[1]]
select3 <- strsplit(as.vector(temp[6,6]),split=", ")[[1]]
select <- c(select1,select2,select3)
select <- select[!duplicated(select)]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "keratinization_rld_heatmap_up1.pdf")
?pheatmap
knitr::opts_chunk$set(echo = TRUE)
results <- list(
res1 = results(dds,contrast = c("treated","case1","case2"),alpha=0.05,lfcThreshold=1),
res2 = results(dds,contrast = c("treated","case2","case3"),alpha=0.05,lfcThreshold=1),
res3 = results(dds,contrast = c("treated","case3","control"),alpha=0.05,lfcThreshold=1))
for(res in results){
summary(res)
print(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))
print(length(which(res$log2FoldChange > log2(2) & res$padj < 0.05)))
}
for(res in results){
#summary(res)
print(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))
print(length(which(res$log2FoldChange > log2(2) & res$padj < 0.05)))
}
results <- list(
res1 = results(dds,contrast = c("treated","case1","case2")),
res2 = results(dds,contrast = c("treated","case2","case3")),
res3 = results(dds,contrast = c("treated","case3","control")))
print(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))
for(res in results){
#summary(res)
print(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))
print(length(which(res$log2FoldChange > log2(2) & res$padj < 0.05)))
}
res_frame
View(res_frame)
res_frames
View(res_merge)
knitr::opts_chunk$set(echo = TRUE)
res_datas <- res_merge
res_datas$score <- res_datas$res1_log2FoldChange - 2*res_datas$res3_log2FoldChange
View(res_datas)
View(constant_down)
constant_down2 <- constant_down
constant_down2$score <- constant_down2$res1_log2FoldChange - 2*constant_down2$res3_log2FoldChange
View(constant_down2)
constant_up2 <- constant_up
constant_up2$score <- constant_up2$res1_log2FoldChange - 2*constant_up2$res3_log2FoldChange
View(constant_down2)
View(constant_up2)
constant_down2 <- constant_down2[order(constant_down2$score),]
constant_down2 <- constant_down2[-order(constant_down2$score),]
?order
constant_down2 <- constant_down2[order(constant_down2$score,decreasing = T),]
View(constant_down2)
constant_down2 <- constant_down
constant_down2$score <- constant_down2$res1_log2FoldChange - 2*constant_down2$res3_log2FoldChange
constant_down2 <- constant_down2[order(constant_down2$score,decreasing = T),]
View(constant_down2)
constant_up2 <- constant_up2[order(constant_up2$score,decreasing = F),]
select <- constant_down2[1:10,]
data <- assay(rld)[select,]
select <- constant_down2[1:10,1]
select
select <- constant_down2[1:10,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10)#,filename = "keratinization_rld_heatmap_up1.pdf")
select <- constant_down2[1:20,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10)#,filename = "keratinization_rld_heatmap_up1.pdf")
select <- constant_down2[,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10)#,filename = "keratinization_rld_heatmap_up1.pdf")
select <- constant_down2[,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_down1.pdf")
pheatmap(data2, cluster_rows=F, show_rownames=T,cluster_cols=F,cellwidth = 50,cellheight = 10,filename = "sortScoredFC_down1.pdf")
View(constant_down2)
View(constant_down2)
directory <- "/home/qszhu/workspace/3.epidermal/3.DESeq2/1.htseq"
sampleFiles <- grep("^.*.txt",list.files(directory),value=TRUE)
sampleCondition <- sub(".txt","",sampleFiles)
print(sampleCondition)
Treated <- factor(substr(sampleCondition,1,1),labels = c("case1","case2","case3","control"))
Rep = factor(substr(sampleCondition,2,2),labels = c("rep1","rep2","rep3"))
sampleCondition = paste0(Treated,"_",Rep)
#Sample = factor(substr(sampleCondition,1,1),labels = c("MYCN","FACT"))
sampleTable <- data.frame(sampleName = sampleCondition,fileName = sampleFiles,treated = Treated,rep = Rep)
#sampleTable$treated <- relevel(sampleTable$treated,"control")
ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,directory = directory,design= ~ treated+rep)
print(sampleCondition)
nrow(ddsHTSeq)
ddsHTSeq2 <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]
nrow(ddsHTSeq2)
dds <- DESeq(ddsHTSeq2)
#去除0counts的基因后有一点点变化
colData(dds)
results <- list(
res1 = results(dds,contrast = c("treated","case1","control")),
res2 = results(dds,contrast = c("treated","case2","control")),
res3 = results(dds,contrast = c("treated","case3","control"))
)
# results <- list(
# res1 = results(dds,contrast = c("treated","case1","control"),alpha=0.05,lfcThreshold=1),
# res2 = results(dds,contrast = c("treated","case2","control"),alpha=0.05,lfcThreshold=1),
# res3 = results(dds,contrast = c("treated","case3","control"),alpha=0.05,lfcThreshold=1))
# res$padj <- res$pvalue
# summary(res)
#head(counts(ddsHTSeq,normalized=TRUE))
for(res in results){
#summary(res)
print(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))
print(length(which(res$log2FoldChange > log2(2) & res$padj < 0.05)))
}
# length(which(res$log2FoldChange < -log2(1.5) & res$pvalue < 0.05))
# length(which(res$log2FoldChange > log2(1.5) & res$pvalue < 0.05))
# length(which(res$log2FoldChange < -log2(1.5) & res$padj < 0.05))
# length(which(res$log2FoldChange > log2(1.5) & res$padj < 0.05))
# length(which(res$log2FoldChange < -log2(1.5) & res$padj < 0.1))
# length(which(res$log2FoldChange > log2(1.5) & res$padj < 0.1))
# length(which(res$padj < 0.1))
# length(which(res$padj < 0.1))
# length(which(res$padj > 0.05))
res_frames = list()
for(res in names(results)){
res_frame <- as.data.frame(results[[res]])
res_frame <- res_frame[which(!is.na(res_frame$padj)),]
res_frame$change <- as.factor(ifelse(res_frame$padj < 0.05 & abs(res_frame$log2FoldChange) >= log2(2),
ifelse(res_frame$log2FoldChange > 0, "UP", "DOWN"), "NOT"))
res_frames[[res]] = res_frame
print(length(which(res_frame$change=="DOWN")))
print(length(which(res_frame$change=="UP")))
}
temp=list()
for(res in names(results)){
res_frame <- as.data.frame(results[[res]])
#res_frame <- res_frame[which(!is.na(res_frame$padj)),]
res_frame$change <- as.factor(ifelse(res_frame$padj < 0.05 & abs(res_frame$log2FoldChange) > log2(2),
ifelse(res_frame$log2FoldChange > 0, "UP", "DOWN"), "NOT"))
res_frame <- res_frame[,c("log2FoldChange","padj","change")]
names(res_frame) <- paste0(res,"_",names(res_frame))
temp[[res]] = res_frame
}
res_merge <- merge(temp$res1,temp$res2,by=0)
res_merge <- merge(res_merge,temp$res3,by.x=1,by.y=0)
###FC1>FC2>FC3>0,expression turn down constantly
constant_down <- res_merge[which((res_merge$res1_log2FoldChange > res_merge$res2_log2FoldChange) &
(res_merge$res2_log2FoldChange > res_merge$res3_log2FoldChange) &
(res_merge$res3_log2FoldChange >= 0) &
(res_merge$res1_change == "UP") &
(res_merge$res2_change == "UP")
),]
# head(constant_down[order(constant_down$res1_log2FoldChange,decreasing = T),])
#write.table(constant_down,"constantly_down2.txt",row.names = F,col.names = T,quote = F,sep = "\t")
length(rownames(constant_down[constant_down$res3_change=="NOT",]))
length(rownames(constant_down[constant_down$res3_change=="UP",]))
###FC1<FC2<FC3<0,expression turn up constantly
constant_up <- res_merge[which((res_merge$res1_log2FoldChange < res_merge$res2_log2FoldChange) &
(res_merge$res2_log2FoldChange < res_merge$res3_log2FoldChange) &
(res_merge$res3_log2FoldChange <= 0) &
(res_merge$res1_change == "DOWN") &
(res_merge$res2_change == "DOWN")
),]
# head(constant_up[order(constant_up$res1_log2FoldChange,decreasing = F),])
#write.table(constant_up,"constantly_up2.txt",row.names = F,col.names = T,quote = F,sep = "\t")
length(rownames(constant_up[constant_up$res3_change=="NOT",]))
length(rownames(constant_up[constant_up$res3_change=="DOWN",]))
constant_down2 <- constant_down
constant_down2$score <- constant_down2$res1_log2FoldChange - 2*constant_down2$res3_log2FoldChange
constant_down2 <- constant_down2[order(constant_down2$score,decreasing = T),]
constant_up2 <- constant_up
constant_up2$score <- constant_up2$res1_log2FoldChange - 2*constant_up2$res3_log2FoldChange
constant_up2 <- constant_up2[order(constant_up2$score,decreasing = F),]
select <- constant_down2[1:20,1]
data <- assay(rld)[select,]
rld <- rlog(dds, blind=TRUE)
select <- constant_down2[1:20,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_down1.pdf")
View(constant_down2)
select <- constant_down2[which(constant_down2$score > 1),1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_down1.pdf")
which(constant_down2$score > 1)
which(constant_down2$score > 2)
select <- constant_down2[which(constant_down2$score > 2),1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_down1.pdf")
which(constant_down2$score > 4)
select <- constant_down2[which(constant_down2$score > 4),1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_down1.pdf")
save.image("sortScoredFC.RData")
write.table(constant_down2,file = "constant_down2_sortScoredFC.txt",quote = F,sep="\t",col.names = T,row.names = F)
write.table(constant_up2,file = "constant_up2_sortScoredFC.txt",quote = F,sep="\t",col.names = T,row.names = F)
select <- constant_up2[1:100,1]
data <- assay(rld)[select,]
data2 <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
pheatmap(data2, cluster_rows=T, show_rownames=T,cluster_cols=F,cellwidth = 20,cellheight = 10,filename = "sortScoredFC_up1.pdf")
colData(dds)
Treated
sampleTable
data
load("sortScored.RData")
load("sortScoredFC.RData")
data
View(data)
View(constant_down)
select_down <- constant_down$Row.names
select_down
select_up <- constant_up$Row.names
data <- assay(rld)[select_down,]
data_down <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
View(data_down)
?sd
sd(data_down)
?apply
apply(data_down,1,sd)
test <- apply(data_down,1,sd)
data_down$std <- apply(data_down,1,sd)
data_down <- data_down[order(data_down$std,decreasing = T),]
counts(dds,normalized = T)
select_down <- constant_down$Row.names
data <- assay(rld)[select_down,]
data_down <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
data_down$std <- apply(data_down,1,sd)
data_down <- data_down[order(data_down$std,decreasing = T),]
write.table(data_down,file = "expression_down_sortByStd.txt",quote = F,sep="\t",col.names = T,row.names = T)
###########
select_up <- constant_up$Row.names
data <- assay(rld)[select_up,]
data_up <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
data_up$std <- apply(data_up,1,sd)
data_up <- data_up[order(data_up$std,decreasing = T),]
write.table(data_up,file = "expression_up_sortByStd.txt",quote = F,sep="\t",col.names = T,row.names = T)
temp <- read.table("chart_KEGG_down.txt",header = F,sep = "\t",row.names = NULL)
select <- strsplit(as.vector(temp[2,6]),split=", ")[[1]]
select
data_down[select,]
which(select %in% select_down)
which(select_down %in% select)
rowMeans(data[,colData(dds)$treated=="case1"])
data[,colData(dds)$treated=="case1"]
dim(data[,colData(dds)$treated=="case1"])
dim(data)
length(select_down)
dim(assay(rld)[select_down,])
data <- assay(rld)[select_down,]
data_down <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
dim(data)
dim(data_down)
data_down[select,]
which(select_down %in% select)
which(rownames(data_down) %in% select)
data_down[which(rownames(data_down) %in% select),]
test <- data_down[select,]
View(test)
data_down[select,]
length(select)
data_pi3k <- data_down[select,]
data_pi3k <- data_pi3k[order(data_pi3k$std,decreasing = T),]
View(data_pi3k)
select_down <- constant_down$Row.names
data <- assay(rld)[select_down,]
data_down <- data.frame("0d"=rowMeans(data[,colData(dds)$treated=="case1"]),
"90d"=rowMeans(data[,colData(dds)$treated=="case2"]),
"120d"=rowMeans(data[,colData(dds)$treated=="case3"]),
control=rowMeans(data[,colData(dds)$treated=="control"]),check.names = F
)
data_down$std <- apply(data_down,1,sd)
data_down <- data_down[order(data_down$std,decreasing = T),]
write.table(data_down,file = "expression_down_sortByStd.txt",quote = F,sep="\t",col.names = T,row.names = T)
temp <- read.table("chart_KEGG_down.txt",header = F,sep = "\t",row.names = NULL)
select <- strsplit(as.vector(temp[2,6]),split=", ")[[1]]
data_pi3k <- data_down[select,]
data_pi3k <- data_pi3k[order(data_pi3k$std,decreasing = T),]
write.table(data_pi3k,file = "expression_pi3k_sortByStd.txt",quote = F,sep="\t",col.names = T,row.names = T)
knitr::opts_chunk$set(echo = TRUE)
head(assay(rlog(ddsHTSeq, blind=T)), 3)
head(assay(rlog(dds, blind=T)), 3)   #一样的
