{
    "collab_server" : "",
    "contents" : "---\ntitle: \"WGCNA\"\nauthor: \"zhu\"\ndate: \"2017年4月21日\"\noutput: word_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n```{r install library, message=FALSE, warning=FALSE}\n# source(\"http://bioconductor.org/biocLite.R\") \n# biocLite(c(\"AnnotationDbi\", \"impute\", \"GO.db\", \"preprocessCore\")) \n# install.packages(\"WGCNA\")\n#suppressMessages(library(WGCNA))\nlibrary(DESeq2)\nlibrary(RColorBrewer)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(sva)\nlibrary(reshape2)\nload(\".RData\")\nsave.image(\".RData\")\n```\n\n```{r Input data}\ndirectory <- \"/home/qszhu/workspace/3.epidermal/3.DESeq2/1.htseq\"\nsampleFiles <- grep(\"^.*.txt\",list.files(directory),value=TRUE)\n\nsampleCondition <- sub(\".txt\",\"\",sampleFiles)\nprint(sampleCondition)\nTreated <- factor(substr(sampleCondition,1,1),labels = c(\"case1\",\"case2\",\"case3\",\"control\"))\nRep = factor(substr(sampleCondition,2,2),labels = c(\"rep1\",\"rep2\",\"rep3\"))\nsampleCondition = paste0(Treated,\"_\",Rep)\n#Sample = factor(substr(sampleCondition,1,1),labels = c(\"MYCN\",\"FACT\"))\n\nsampleTable <- data.frame(sampleName = sampleCondition,fileName = sampleFiles,treated = Treated,rep = Rep)\n#sampleTable$treated <- relevel(sampleTable$treated,\"control\")\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,directory = directory,design= ~ treated+rep)\n\nprint(sampleCondition)\n``` \n\n```{r}\nresults <- list(\nres1 = results(dds,contrast = c(\"treated\",\"case1\",\"case2\")),\nres2 = results(dds,contrast = c(\"treated\",\"case2\",\"case3\")),\nres3 = results(dds,contrast = c(\"treated\",\"case3\",\"control\")))\n\ndata2\n```\n\n\n```{r results}\nnrow(ddsHTSeq)\nddsHTSeq2 <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\nnrow(ddsHTSeq2)\ndds <- DESeq(ddsHTSeq2)\n#去除0counts的基因后有一点点变化\n\ncolData(dds)\nresults <- list(\nres1 = results(dds,contrast = c(\"treated\",\"case1\",\"control\")),\nres2 = results(dds,contrast = c(\"treated\",\"case2\",\"control\")),\nres3 = results(dds,contrast = c(\"treated\",\"case3\",\"control\"))\n)\n# results <- list(\n# res1 = results(dds,contrast = c(\"treated\",\"case1\",\"control\"),alpha=0.05,lfcThreshold=1),\n# res2 = results(dds,contrast = c(\"treated\",\"case2\",\"control\"),alpha=0.05,lfcThreshold=1),\n# res3 = results(dds,contrast = c(\"treated\",\"case3\",\"control\"),alpha=0.05,lfcThreshold=1))\n# res$padj <- res$pvalue\n# summary(res)\n#head(counts(ddsHTSeq,normalized=TRUE))\n```\n\n```{r}\nhead(assay(rlog(ddsHTSeq, blind=T)), 3)\nhead(assay(rlog(dds, blind=T)), 3)   #一样的\n```\n\n\n```{r count DE number}\nfor(res in results){\n  #summary(res)\nprint(length(which(res$log2FoldChange < -log2(2) & res$padj < 0.05)))\nprint(length(which(res$log2FoldChange > log2(2) & res$padj < 0.05)))\n}\n\n\n# length(which(res$log2FoldChange < -log2(1.5) & res$pvalue < 0.05))\n# length(which(res$log2FoldChange > log2(1.5) & res$pvalue < 0.05))\n# length(which(res$log2FoldChange < -log2(1.5) & res$padj < 0.05))\n# length(which(res$log2FoldChange > log2(1.5) & res$padj < 0.05))\n# length(which(res$log2FoldChange < -log2(1.5) & res$padj < 0.1))\n# length(which(res$log2FoldChange > log2(1.5) & res$padj < 0.1))\n# length(which(res$padj < 0.1))\n# length(which(res$padj < 0.1))\n# length(which(res$padj > 0.05))\nres_frames = list()\nfor(res in names(results)){\nres_frame <- as.data.frame(results[[res]])\nres_frame <- res_frame[which(!is.na(res_frame$padj)),]\n\nres_frame$change <- as.factor(ifelse(res_frame$padj < 0.05 & abs(res_frame$log2FoldChange) >= log2(2),\n                               ifelse(res_frame$log2FoldChange > 0, \"UP\", \"DOWN\"), \"NOT\"))\nres_frames[[res]] = res_frame\nprint(length(which(res_frame$change==\"DOWN\")))\nprint(length(which(res_frame$change==\"UP\")))\n}\n\n```\n\n\n```{r volcano plot}\n#with(res_frame, plot(log2FoldChange, -log10(padj), pch=20, main=\"Volcano plot\"))\nfor(res_frame in res_frames){\ng = ggplot(data=res_frame, aes(x=log2FoldChange, y=-log10(padj), color=change)) +\n  geom_point(alpha=0.5, size=1,na.rm = T) +\n  theme_set(theme_set(theme_bw(base_size=20)))+\n  xlab(\"log2 fold change\") + ylab(\"-log10 padj-value\") +\n  #ggtitle( this_tile  ) + theme(plot.title = element_text(size=15,hjust = 0.5))+\n  scale_colour_manual(values = c('darkgreen','grey','red'))  ## corresponding to the levels(res$change)\n#print(g)\nspe_genes <- select#  c(\"ABCA12\",\"LCE1A\",\"SPRR1A\",\"KRT16\")\nspe_frame <- res_frame[spe_genes,]\nspe_frame$name <- as.factor(rownames(spe_frame))\n\ng2 <- g + \n  geom_point(aes(x=log2FoldChange, y=-log10(padj)), data = spe_frame, color=\"yellow\")+\n  geom_text(aes(x=log2FoldChange, y=-log10(padj),label=name,vjust=-1,hjust=-0.1), data = spe_frame,color=\"black\")\n\nprint(g2)\n}\n```\n\n\n\n\n```{r write results}\nfor(res in names(res_frames)){\n  res_frame=res_frames[[res]]\nwrite.table(res_frame[order(res_frame$log2FoldChange),],file = paste0(res,\".txt\"),quote = F,sep=\"\\t\", col.names = F)\n}\n\n\nwrite(rownames(res_frame[which(res_frame$change == \"DOWN\"),]),file=\"FACT_down.temp\")\nwrite(rownames(res_frame[which(res_frame$change == \"UP\"),]),file=\"FACT_up.temp\")\n\n\nwrite.table(counts(dds,normalized=T),file = \"normalized_counts.txt\",quote = F,sep=\"\\t\",col.names = T,row.names = T)\nwrite.table(assay(rld),file = \"rlog.txt\",quote = F,sep=\"\\t\",col.names = T,row.names = T)\n```\n\n\n```{r rlog}\nrld <- rlog(dds, blind=TRUE)\nvsd <- varianceStabilizingTransformation(dds, blind=FALSE)\nvsd.fast <- vst(dds, blind=FALSE)\nhead(assay(rld), 3)\n```\n\n```{r correlation heatmap}\n\nsampleDists <- dist(t(assay(rld)))\nsampleDistMatrix <- as.matrix(sampleDists)\nrownames(sampleDistMatrix) <- paste(Sample, Time, Ploidy, sep=\"-\")\ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,clustering_distance_rows=sampleDists,clustering_distance_cols=sampleDists,col=colors)\n```\n\n\n\n```{r pca}\n#(\"RNA_deseq2_pca2.pdf\")\n#plotPCA(rld, intgroup=c(\"sample\", \"time\",\"ploidy\"))\ndata <- plotPCA(rld, intgroup=c(\"treated\",\"rep\"), returnData=TRUE)\n#data <- prcomp(t(dat2))\npercentVar <- round(100 * attr(data, \"percentVar\"))\n#datx = as.data.frame(data$x)\nggplot(data, aes(PC1, PC2)) + geom_point(aes(color = treated,  shape = rep),size = 4) +\n    #scale_color_manual(values = c(\"green\",\"red\")) + \n#    scale_shape_manual(values=c(16,1,17,2)) +\n   # scale_shape_manual(values=c(16,17)) + \n#    scale_size_manual(values = c(2,4)) + \n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) + \n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) + \n  coord_fixed()\n#dev.off()\n```\n\n\n```{r MA plot}\nplotMA(res, main=\"DESeq2\", ylim=c(-2,2))\nplotCounts(dds, gene=\"ATF3\", intgroup=\"treated\") #which.min(res$pvalue)\n\n```\n\n\n\n\n\n```{r merge}\ntemp=list()\nfor(res in names(results)){\nres_frame <- as.data.frame(results[[res]])\n#res_frame <- res_frame[which(!is.na(res_frame$padj)),]\n\nres_frame$change <- as.factor(ifelse(res_frame$padj < 0.05 & abs(res_frame$log2FoldChange) > log2(2),\n                               ifelse(res_frame$log2FoldChange > 0, \"UP\", \"DOWN\"), \"NOT\"))\n\nres_frame <- res_frame[,c(\"log2FoldChange\",\"padj\",\"change\")]\nnames(res_frame) <- paste0(res,\"_\",names(res_frame))\n\n\ntemp[[res]] = res_frame\n\n}\n\nres_merge <- merge(temp$res1,temp$res2,by=0)\nres_merge <- merge(res_merge,temp$res3,by.x=1,by.y=0)\n\n###FC1>FC2>FC3>0,expression turn down constantly\nconstant_down <- res_merge[which((res_merge$res1_log2FoldChange > res_merge$res2_log2FoldChange) &\n                           (res_merge$res2_log2FoldChange > res_merge$res3_log2FoldChange) &\n                           (res_merge$res3_log2FoldChange >= 0) &\n                           (res_merge$res1_change == \"UP\") &\n                           (res_merge$res2_change == \"UP\")\n                         ),]\n# head(constant_down[order(constant_down$res1_log2FoldChange,decreasing = T),])\n#write.table(constant_down,\"constantly_down2.txt\",row.names = F,col.names = T,quote = F,sep = \"\\t\")\n\nlength(rownames(constant_down[constant_down$res3_change==\"NOT\",]))\nlength(rownames(constant_down[constant_down$res3_change==\"UP\",]))\n\n\n###FC1<FC2<FC3<0,expression turn up constantly\nconstant_up <- res_merge[which((res_merge$res1_log2FoldChange < res_merge$res2_log2FoldChange) &\n                           (res_merge$res2_log2FoldChange < res_merge$res3_log2FoldChange) &\n                           (res_merge$res3_log2FoldChange <= 0) &\n                           (res_merge$res1_change == \"DOWN\") &\n                           (res_merge$res2_change == \"DOWN\")\n                         ),]\n# head(constant_up[order(constant_up$res1_log2FoldChange,decreasing = F),])\n#write.table(constant_up,\"constantly_up2.txt\",row.names = F,col.names = T,quote = F,sep = \"\\t\")\n\nlength(rownames(constant_up[constant_up$res3_change==\"NOT\",]))\nlength(rownames(constant_up[constant_up$res3_change==\"DOWN\",]))\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1492738135882.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2617596701",
    "id" : "3FE8DE6F",
    "lastKnownWriteTime" : 1495095557,
    "last_content_update" : 1495095557,
    "path" : "~/R/epider/DESeq2.Rmd",
    "project_path" : "DESeq2.Rmd",
    "properties" : {
        "last_setup_crc32" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}